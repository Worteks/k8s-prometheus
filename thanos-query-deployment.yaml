apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query
spec:
  replicas: 2
  selector:
    matchLabels:
      name: thanos-query
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: thanos-query
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values: [ thanos-query ]
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - query
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:9090
        - --log.level=info
        - --log.request.decision=LogFinishCall
        - --query.partial-response
        - --query.replica-label=scrape_by
        - --query.timeout=2m
        - --store=dns+thanos-store.NAMESPACE_SED.svc.cluster.local:10901
        - --store=dns+prometheus-thanos.NAMESPACE_SED.svc.cluster.local:10901
        image: quay.io/thanos/thanos:v0.17.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 9090
          periodSeconds: 30
        name: thanos
        ports:
        - containerPort: 9090
        - containerPort: 10901
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 9090
          periodSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 512Mi
      securityContext:
        runAsUser: 1001
